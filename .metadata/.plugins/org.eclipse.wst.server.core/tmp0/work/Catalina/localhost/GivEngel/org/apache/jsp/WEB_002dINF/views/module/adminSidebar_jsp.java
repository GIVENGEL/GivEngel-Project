/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-07-20 12:32:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.module;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminSidebar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav class=\"navbar navbar-custom navbar-fixed-top\" role=\"navigation\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<div class=\"navbar-header\">\r\n");
      out.write("				<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#sidebar-collapse\"><span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("					<span class=\"icon-bar\"></span>\r\n");
      out.write("					<span class=\"icon-bar\"></span>\r\n");
      out.write("					<span class=\"icon-bar\"></span></button>\r\n");
      out.write("				<a class=\"navbar-brand\" href=\"#\"><span>GivEngel</span>Admin</a>\r\n");
      out.write("				<ul class=\"nav navbar-top-links navbar-right\">\r\n");
      out.write("					<li class=\"dropdown\"><a class=\"dropdown-toggle count-info\" data-toggle=\"dropdown\" href=\"#\">\r\n");
      out.write("						<em class=\"fa fa-envelope\"></em><span class=\"label label-danger\">15</span>\r\n");
      out.write("					</a>\r\n");
      out.write("						<ul class=\"dropdown-menu dropdown-messages\">\r\n");
      out.write("							<li>\r\n");
      out.write("								<div class=\"dropdown-messages-box\"><a href=\"profile.html\" class=\"pull-left\">\r\n");
      out.write("									<img alt=\"image\" class=\"img-circle\" src=\"http://placehold.it/40/30a5ff/fff\">\r\n");
      out.write("									</a>\r\n");
      out.write("									<div class=\"message-body\"><small class=\"pull-right\">3 mins ago</small>\r\n");
      out.write("										<a href=\"#\"><strong>John Doe</strong> commented on <strong>your photo</strong>.</a>\r\n");
      out.write("									<br /><small class=\"text-muted\">1:24 pm - 25/03/2015</small></div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</li>\r\n");
      out.write("							<li class=\"divider\"></li>\r\n");
      out.write("							<li>\r\n");
      out.write("								<div class=\"dropdown-messages-box\"><a href=\"profile.html\" class=\"pull-left\">\r\n");
      out.write("									<img alt=\"image\" class=\"img-circle\" src=\"http://placehold.it/40/30a5ff/fff\">\r\n");
      out.write("									</a>\r\n");
      out.write("									<div class=\"message-body\"><small class=\"pull-right\">1 hour ago</small>\r\n");
      out.write("										<a href=\"#\">New message from <strong>Jane Doe</strong>.</a>\r\n");
      out.write("									<br /><small class=\"text-muted\">12:27 pm - 25/03/2015</small></div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</li>\r\n");
      out.write("							<li class=\"divider\"></li>\r\n");
      out.write("							<li>\r\n");
      out.write("								<div class=\"all-button\"><a href=\"#\">\r\n");
      out.write("									<em class=\"fa fa-inbox\"></em> <strong>All Messages</strong>\r\n");
      out.write("								</a></div>\r\n");
      out.write("							</li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"dropdown\"><a class=\"dropdown-toggle count-info\" data-toggle=\"dropdown\" href=\"#\">\r\n");
      out.write("						<em class=\"fa fa-bell\"></em><span class=\"label label-info\">5</span>\r\n");
      out.write("					</a>\r\n");
      out.write("						<ul class=\"dropdown-menu dropdown-alerts\">\r\n");
      out.write("							<li><a href=\"#\">\r\n");
      out.write("								<div><em class=\"fa fa-envelope\"></em> 1 New Message\r\n");
      out.write("									<span class=\"pull-right text-muted small\">3 mins ago</span></div>\r\n");
      out.write("							</a></li>\r\n");
      out.write("							<li class=\"divider\"></li>\r\n");
      out.write("							<li><a href=\"#\">\r\n");
      out.write("								<div><em class=\"fa fa-heart\"></em> 12 New Likes\r\n");
      out.write("									<span class=\"pull-right text-muted small\">4 mins ago</span></div>\r\n");
      out.write("							</a></li>\r\n");
      out.write("							<li class=\"divider\"></li>\r\n");
      out.write("							<li><a href=\"#\">\r\n");
      out.write("								<div><em class=\"fa fa-user\"></em> 5 New Followers\r\n");
      out.write("									<span class=\"pull-right text-muted small\">4 mins ago</span></div>\r\n");
      out.write("							</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div><!-- /.container-fluid -->\r\n");
      out.write("	</nav>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
