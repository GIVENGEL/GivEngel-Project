<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminDAO">

	<select id="login" resultType="adminVO">
		SELECT *
		FROM admin
		WHERE admin_id =
		#{admin_id}
		AND admin_pw = #{admin_pw}
	</select>
	<select id="checkAdminId" parameterType="adminVO"
		resultType="int">
		select count(*) from admin
		where admin_id = #{admin_id};
	</select>




	<select id="selectAdmin" resultType="adminVO">
		SELECT *
		FROM admin
		WHERE
		admin_id = #{admin_id}
	</select>
	<select id="selectAdmins" resultType="adminVO">
		SELECT *
		FROM admin
	</select>
	<insert id="insertAdmins" parameterType="adminVO">
		INSERT INTO
		admin(admin_id,admin_pw,admin_lastdate,admin_level,admin_available)
		VALUES(#{admin_id}, #{admin_pw},sysdate(), #{admin_level},1)
	</insert>
	<update id="updateAdmins" parameterType="AdminVO">
		UPDATE admin
		SET admin_id
		= #{admin_id}, admin_pw = #{admin_pw}, admin_level=#{admin_level},
		admin_available=#{admin_available}
		WHERE admin_no = #{admin_no}
	</update>
	<delete id="deleteAdmins" parameterType="AdminVO">
		DELETE FROM admin
		WHERE
		admin_no = #{admin_no}
	</delete>
	
	<select id="searchAdmin" parameterType="String" resultType="AdminVO">
		SELECT * FROM admin
		WHERE admin_id LIKE CONCAT("%", #{searchData}, "%")
	</select>
	





	<select id="userCount" resultType="int">
		SELECT COUNT(*)
		FROM user
	</select>
	<select id="priceCount" resultType="int">
		select sum(user_buylog_price)
		as sum from user_buylog;
	</select>
	<select id="cashCount" resultType="int">
	 <![CDATA[
		select sum(user_cashlog_price) as sum from user_cashlog
		WHERE user_cashlog_price < 0
	]]>
	</select>
	
	<select id="priceRate" resultType="float">
	 <![CDATA[
		select (today-yesterday)/yesterday*100 from(
select ifnull(sum(user_buylog_price),0) as today from user_buylog WHERE DATE_FORMAT(user_buylog_date, "%Y-%m-%d") = CURDATE()) as todaytb,
(select ifnull(sum(user_buylog_price),0) as yesterday from user_buylog WHERE DATE_FORMAT(user_buylog_date, "%Y-%m-%d") = CURDATE()- INTERVAL 1 DAY) as yesterdaytb;
	]]>
	</select>
	
	<select id="userRate" resultType="float">
	 <![CDATA[
		select (today-yesterday)/yesterday*100 from(
select ifnull(count(*),0) as today from user WHERE DATE_FORMAT(user_date, "%Y-%m-%d") = CURDATE()) as todaytb,
(select ifnull(count(*),0) as yesterday from user WHERE DATE_FORMAT(user_date, "%Y-%m-%d") = CURDATE()- INTERVAL 1 DAY) as yestertb;
	]]>
	</select>
	
	<select id="cashRate" resultType="float">
	 <![CDATA[
		select minus/plus*-100 from
(select ifnull(sum(user_cashlog_price),0) as plus from user_cashlog
WHERE user_cashlog_price >= 0) as p,
(select ifnull(sum(user_cashlog_price),0) as minus  from user_cashlog
WHERE user_cashlog_price < 0) as m;
	]]>
	</select>
	
	<select id="countBag" resultType="int">
	<![CDATA[
	select count(*) from user_buylog b natural join good
WHERE good_tag LIKE '%BAG%';
	]]>
	</select>
	<select id="countAcc" resultType="int">
	<![CDATA[
	select count(*) from user_buylog b natural join good
WHERE good_tag LIKE '%ACC%';
	]]>
	</select>
	<select id="countTop" resultType="int">
	<![CDATA[
	select count(*) from user_buylog b natural join good
WHERE good_tag LIKE '%TOP%';
	]]>
	</select>
	
	<select id="countBottom" resultType="int">
	<![CDATA[
	select count(*) from user_buylog b natural join good
WHERE good_tag LIKE '%BOTTOM%';
	]]>
	</select>
	
	
	
	<select id="selectUserBuyLog" resultType="int">
		SELECT count(*) FROM
		user_buylog
	</select>















	<select id="selectGood" resultType="goodVO">
		SELECT *
		FROM good
		ORDER BY
		good_no desc
	</select>
	<insert id="insertGood" parameterType="goodVO">
		INSERT INTO
		good(good_name,good_price,good_tag,good_like,good_stock,good_detail,good_img,good_img_size,good_date,spon_no)
		VALUES(#{good_name}, #{good_price},
		#{good_tag},0,#{good_stock},#{good_detail},#{good_img},#{good_img_size},sysdate(),#{spon_no})
	</insert>
	<update id="updateGood" parameterType="GoodVO">
		UPDATE good
		SET good_name =
		#{good_name}, good_price=#{good_price}, good_tag=#{good_tag},
		good_stock=#{good_stock},
		good_detail=#{good_detail},spon_no=#{spon_no}
		WHERE good_no =
		#{good_no}
	</update>
	<delete id="deleteGood" parameterType="GoodVO">
		DELETE FROM good
		WHERE
		good_no = #{good_no}
	</delete>
	
	<select id="searchGood" parameterType="String"
		resultType="GoodVO">
		SELECT * FROM good
		WHERE ${part} LIKE '%${searchData}%'
	</select>
	<delete id="deleteGood_com" parameterType="GoodVO">
		DELETE FROM good_com
		WHERE good_no = #{good_no}
	</delete>






	<select id="selectSpon" resultType="sponVO">
		SELECT *
		FROM spon
	</select>
	<insert id="insertSpon" parameterType="SponVO">
		INSERT INTO
		spon(spon_name, spon_total, spon_iscampaign, spon_start, spon_end,
		spon_url, spon_comment, spon_img, spon_img_size,spon_campaign_img)
		VALUES(#{spon_name}, 0, #{spon_iscampaign}, sysdate(), #{spon_end},
		#{spon_url},#{spon_comment}, #{spon_img}, #{spon_img_size},
		#{spon_campaign_img})

	</insert>
	<update id="updateSpon" parameterType="SponVO">
		UPDATE spon
		SET spon_name =
		#{spon_name}, spon_iscampaign= #{spon_iscampaign},
		spon_end=#{spon_end}, spon_url=#{spon_url},
		spon_comment=#{spon_comment}
		WHERE spon_no = #{spon_no}
	</update>
	<delete id="deleteSpon" parameterType="SponVO">
		DELETE FROM spon
		WHERE
		spon_no = #{spon_no}
	</delete>
	
	<delete id="deleteSpon_com" parameterType="SponVO">
		DELETE FROM spon_com
		WHERE spon_no = #{spon_no}
	</delete>
	
	
	
	
	
	
	<select id="selectFleaList" resultType="FleaVO">
		SELECT *
		FROM flea
	</select>
	<select id="selectFlea" parameterType="FleaVO" resultType="FleaVO">
		SELECT *
		FROM flea
		WHERE flea_no = #{flea_no}
	</select>
	<update id="updateFleaTest" parameterType="map">
		UPDATE flea
		<if test="test == 'testing'">SET flea_isokay=null  </if>
		<if test="test == 'test_yes'">SET flea_isokay=true  </if>
		<if test="test == 'test_no'">SET flea_isokay=false  </if>
		WHERE flea_no = #{flea_no}
	</update>
	<delete id="deleteFlea" parameterType="FleaVO">
		DELETE FROM flea
		WHERE
		flea_no = #{flea_no}
	</delete>
	<select id="searchFlea" parameterType="map"
		resultType="FleaVO">
		SELECT * FROM flea
		WHERE (flea_title LIKE '%${searchData}%'
		OR flea_writer LIKE '%${searchData}%')
		<if test="test == 'flea_test'"> AND isNull(flea_isokay)  </if>
		<if test="test == 'flea_all'">   </if>
		<if test="test == 'flea_yes'"> AND flea_isokay = 1 </if>
		<if test="test == 'flea_no'"> AND flea_isokay = 0  </if>
	</select>
	
	
	

	<select id="searchUser" parameterType="String"
		resultType="UserVO">
		SELECT * FROM user
		WHERE user_id LIKE '%${searchData}%'
		OR
		user_name LIKE '%${searchData}%'
	</select>
	<select id="selectUsers" resultType="UserVO">
		SELECT * FROM user
	</select>
	<select id="selectUser" parameterType="UserVO"
		resultType="UserVO">
		SELECT * FROM user
		WHERE user_no = #{user_no}
	</select>
	<delete id="deleteUser" parameterType="UserVO">
		DELETE FROM user
		WHERE
		user_no = #{user_no}
	</delete>
	<update id="updateUser" parameterType="UserVO">
		UPDATE user
		SET user_id = #{user_id}, user_name = #{user_name}, user_pw = #{user_pw}, user_addr = #{user_addr}, user_tel = #{user_tel}, user_cash = #{user_cash}
		WHERE user_no = #{user_no}
	</update>


	<select id="selectTodayUser" resultType="int">
		SELECT count(*) FROM user WHERE DATE_FORMAT(user_date, "%Y-%m-%d") = CURDATE()
	</select>
	<select id="adminCount" resultType="int">
		SELECT count(*) FROM admin
	</select>
	







	<select id="chartPricePerTime" resultType="adminChartTimeVO">
		SELECT * FROM
		(SELECT
		@N := @N+1 as n
		FROM user_buylog,(SELECT @N :=-1 from DUAL) NN
		LIMIT 24)
		AS T
		LEFT JOIN
		(SELECT HOUR(user_buylog_date) AS hh,
		COUNT(user_buylog_date) AS
		userCnt,SUM(user_buylog_price) AS priceSum
		FROM user_buylog
		WHERE user_buylog_date between '2021-01-01 00:00:00'
		AND
		date_format(now(),'%Y-%m-%d 23:59:59')
		group by hh) AS dayT
		ON T.n =
		dayT.hh
	</select>
	
	
	<select id="chartPriceAndCash" resultType="adminChartBarVO">
		select * from
		(SELECT DAY(user_cashlog_date) AS dates,SUM(user_cashlog_price) buy_sum
		FROM user_cashlog
		WHERE user_cashlog_date between '2021-01-01 00:00:00' AND
		date_format(now(),'%Y-%m-%d 23:59:59')
		group by dates
		LIMIT 0,7) AS cash
		natural join
		(SELECT DAY(user_buylog_date) AS dates,SUM(user_buylog_price) cash_sum
		FROM user_buylog
		WHERE user_buylog_date between '2021-01-01 00:00:00' AND
		date_format(now(),'%Y-%m-%d 23:59:59')
		group by dates
		LIMIT 0,7) AS buy;
	</select>
	
	
	
	<resultMap type="HashMap" id="hotCategory">
		<id column="tag" property="tag"/>
		<id column="num" property="num"/>
	</resultMap>
	
	<select id="chartHotCategory" resultMap="hotCategory">
	(SELECT SUBSTR(good_tag,7) AS tag,(user_buylog_price/good_price) AS num 
	FROM user_buylog b NATURAL JOIN good
	WHERE good_tag LIKE '%BOTTOM%') UNION ALL
	(SELECT SUBSTR(good_tag,4) AS tag,(user_buylog_price/good_price) AS num 
	FROM user_buylog b NATURAL JOIN good
	WHERE good_tag NOT LIKE '%BOTTOM%'); 
	</select>
	
	
	<resultMap type="HashMap" id="trendData">
		<id column="trend_time" property="trend_time"/>
		<id column="trend_ratio" property="trend_ratio"/>
	</resultMap>
	
	<select id="chartTrendData" resultMap="trendData">
	SELECT Time as trend_time,Trend_ratio as trend_ratio FROM trend_data
	</select>
	
	



</mapper>